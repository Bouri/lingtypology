{
    "collab_server" : "",
    "contents" : "#' Get country by languoid\n#'\n#' Takes any vector of languoids and return affiliation.\n#' @param x character vector of the languoids (can be written in lower case)\n#' @param intersection logical. If TRUE, function reterns vector of countries, where all languoids from x argument are spoken.\n#' @author George Moroz <agricolamz@gmail.com>\n#' @examples\n#' country.lang(\"Udi\")\n#' country.lang(c(\"Udi\", \"Laz\"))\n#' country.lang(c(\"Udi\", \"Laz\"), intersection = TRUE)\n#' @export\n\n\ncountry.lang <- function(x, intersection = FALSE){\n  input <- tolower(x)\n  a <- NA\n  for (i in 1:length(input)) {\n    if (is.glottolog(x[i], response = T) == T) {\n      a <- c(a, glottolog[tolower(glottolog$lang) == input[i],]$country)\n    } else {\n      a <- c(a, NA)\n    }}\n  ret <- a[-1]; ret\n  if (intersection == TRUE){\n    b <- unlist(strsplit(paste(ret, collapse = \", \"), \", \"))\n    names(table(b)[table(b) == max(table(b))])\n  } else{ret}}\n",
    "created" : 1466876062833.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3348664091",
    "id" : "9AA08DCF",
    "lastKnownWriteTime" : 1466880362,
    "last_content_update" : 1466880362733,
    "path" : "~/_DATA/OneDrive1/_Work/github/lingtypology/lingtypology/R/country.lang.R",
    "project_path" : "R/country.lang.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}