{
    "collab_server" : "",
    "contents" : "#' Map a set of linguoids and color them by feature\n#'\n#' Takes any vector of linguoids and return a map.\n#' @param x A character vector of linguoids (can be written in lower case)\n#' @author George Moroz <agricolamz@gmail.com>\n#' @examples\n#' map.lang(c(\"Adyghe\", \"Russian\"))\n#' ## Map all Slavic languages\n#' map.lang(lang.aff(c(\"Slavic\")))\n#' @export\n#' @import leaflet\n\nmap.feature <- function(languages, features = \"none\", popup = \"\",\n                    #long = glottolog$longitude,\n                    #lat = glottolog$latitude,\n                    title = NULL){\n\n  mycolors <- c(\"dodgerblue2\",\"#E31A1C\", \"green4\", \"#6A3D9A\", \"#FF7F00\", \"skyblue2\",\"#FB9A99\",  \"palegreen2\", \"#CAB2D6\",  \"#FDBF6F\", \"gray70\", \"khaki2\", \"maroon\",\"orchid1\",\"deeppink1\",\"blue1\",\"steelblue4\", \"darkturquoise\",\"green1\",\"yellow4\",\"yellow3\", \"darkorange4\",\"brown\")\n\n  mapfeat.df <- data.frame(languages, features,\n                           long = long.lang(languages),\n                           lat = lat.lang(languages),\n                           popup = popup)\n\n  mapfeat.df$link <- makelink(as.character(mapfeat.df$languages), popup = mapfeat.df$popup)\n  mapfeat.df <- mapfeat.df[stats::complete.cases(mapfeat.df),]\n  pal <- leaflet::colorFactor(mycolors[1:length(unique(mapfeat.df$features))],\n                              domain = mapfeat.df$features)\n  levels(mapfeat.df$features) <- paste(names(table(mapfeat.df$features)), \" (\", table(mapfeat.df$features), \")\", sep = \"\")\n\n  if(length(table(mapfeat.df$features)) <= 1){\n    m <- leaflet::leaflet(mapfeat.df) %>%\n      leaflet::addTiles() %>%\n      leaflet::addCircleMarkers(lng=mapfeat.df$long,\n                                lat=mapfeat.df$lat,\n                                popup= mapfeat.df$link,\n                                stroke = T,\n                                radius = 5,\n                                fillOpacity = 1,\n                                group = mapfeat.df$languages) %>%\n      leaflet::addLayersControl(overlayGroups = mapfeat.df$languages,\n                                options = layersControlOptions(collapsed = F))\n    m\n  } else{\n  m <- leaflet::leaflet(mapfeat.df) %>%\n    leaflet::addTiles() %>%\n    leaflet::addCircleMarkers(lng=mapfeat.df$long,\n                              lat=mapfeat.df$lat,\n                              popup= mapfeat.df$link,\n                              stroke = T,\n                              radius = 5,\n                              fillOpacity = 1,\n                              color = pal(mapfeat.df$features),\n                              group = mapfeat.df$features) %>%\n    leaflet::addLayersControl(overlayGroups = mapfeat.df$features,\n                              options = layersControlOptions(collapsed = F)) %>%\n    leaflet::addLegend(title = title,\n                       position = c(\"bottomleft\"),\n                       pal = pal,\n                       values = mapfeat.df$features,\n                       opacity = 1)\n  m\n  }\n  }\n",
    "created" : 1466359158391.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3677602503",
    "id" : "E4734ED4",
    "lastKnownWriteTime" : 1466360551,
    "last_content_update" : 1466360551301,
    "path" : "~/_DATA/OneDrive1/_Work/github/lingtypology/R/map.feature.R",
    "project_path" : "R/map.feature.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}