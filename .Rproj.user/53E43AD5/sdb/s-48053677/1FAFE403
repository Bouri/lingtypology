{
    "collab_server" : "",
    "contents" : "#' Get languoids by affiliation\n#'\n#' Takes any vector of affiliations and return languoids.\n#' @param x A character vector of the affiliations (can be written in lower case)\n#' @param list logical. If TRUE, returns a list of languoids, if FALSE return a named vector.\n#' @author George Moroz <agricolamz@gmail.com>\n#' @examples\n#' lang.aff(\"Balto-Slavic\")\n#' lang.aff(c(\"East Slavic\", \"West Slavic\"))\n#' lang.aff(c(\"East Slavic\", \"West Slavic\"), list = TRUE)\n#' @export\n\nlang.aff <- function(x, list = FALSE){\n  if(list == FALSE){\n    c(unlist(sapply(x, function(y){\n      glottolog[grep(tolower(y), tolower(glottolog$affiliation)),]$languoid})))\n    } else {\n      sapply(x, function(y){\n        glottolog[grep(tolower(y), tolower(glottolog$affiliation)),]$languoid})}\n  }\n",
    "created" : 1477552024783.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1374932359",
    "id" : "1FAFE403",
    "lastKnownWriteTime" : 1477733169,
    "last_content_update" : 1477733169092,
    "path" : "~/_DATA/OneDrive1/_Work/github/lingtypology/lingtypology/R/lang.aff.R",
    "project_path" : "R/lang.aff.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}