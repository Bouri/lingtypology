{
    "collab_server" : "",
    "contents" : "## ---- eval=FALSE---------------------------------------------------------\n#  install.packages(\"lingtypology\")\n\n## ---- eval= F------------------------------------------------------------\n#  install.packages(\"devtools\")\n#  devtools::install_github(\"agricolamz/lingtypology\", dependencies = TRUE)\n\n## ------------------------------------------------------------------------\nlibrary(lingtypology)\n\n## ------------------------------------------------------------------------\niso.lang(\"Adyghe\")\nlang.iso(\"ady\")\ncountry.lang(\"Adyghe\")\nlang.aff(\"Abkhaz-Adyge\")\n\n## ------------------------------------------------------------------------\narea.lang(c(\"Adyghe\", \"Aduge\"))\nlang <- c(\"Adyghe\", \"Russian\")\naff.lang(lang)\n\n## ------------------------------------------------------------------------\niso.lang(lang.aff(\"East Slavic\"))\n\n## ------------------------------------------------------------------------\ncountry.lang(c(\"Udi\", \"Laz\"))\ncountry.lang(c(\"Udi\", \"Laz\"), intersection = TRUE)\n\n## ------------------------------------------------------------------------\nlang.country(\"Cape Verde\")\nlang.country(\"Cabo Verde\")\nhead(lang.country(\"UK\"))\n\n## ------------------------------------------------------------------------\naff.lang(\"Adyge\")\n\n## ---- fig.width=6.2------------------------------------------------------\nmap.feature(c(\"Adyghe\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"))\n\n## ------------------------------------------------------------------------\ndf <- data.frame(language = c(\"Adyghe\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"),\n                 features = c(\"polysynthetic\", \"polysynthetic\", \"fusional\", \"fusional\", \"fusional\"))\ndf\n\n## ---- fig.width=6.2------------------------------------------------------\nmap.feature(languages = df$language, features = df$features)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(40)\nmap.feature(languages = df$language, features = df$features)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(40)\nmap.feature(df$language, df$features)\n\n## ---- fig.width=6.2------------------------------------------------------\ndf$popup <- aff.lang(df$language)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(40)\nmap.feature(languages = df$language, features = df$features, popup = df$popup)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(40)\nmap.feature(df$language, df$features, df$popup)\n\n## ---- fig.width=6.2------------------------------------------------------\n# change a df$popup vector\ndf$popup <- c (\"sɐ s-ɐ-k'ʷɐ<br> 1sg 1sg.abs-dyn-go<br>'I go'\",\n               \"sɐ s-o-k'ʷɐ<br> 1sg 1sg.abs-dyn-go<br>'I go'\",\n               \"id-ę<br> go-1sg.npst<br> 'I go'\",\n               \"ya id-u<br> 1sg go-1sg.npst <br> 'I go'\",\n               \"id-a<br> go-1sg.prs<br> 'I go'\")\n# create a map\nset.seed(40)\nmap.feature(df$language, df$features, df$popup)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(7)\nmap.feature(languages = circassian$language,\n            features = circassian$languoid,\n            popup = circassian$village,\n            latitude = circassian$latitude,\n            longitude = circassian$longitude)\n\n## ---- fig.width=6.2------------------------------------------------------\ndf <- data.frame(language = c(\"Adyghe\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"),\n                 features = c(\"polysynthetic\", \"polysynthetic\", \"fusional\", \"fusional\", \"fusional\"))\nmap.feature(languages = df$language,\n            features = df$features,\n            color = c(\"yellowgreen\", \"navy\"))\n\n## ---- fig.width=6.2------------------------------------------------------\nmap.feature(lang.aff(\"Sign Language\"), control = FALSE)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(7)\nmap.feature(circassian$language,\n            features = circassian$languoid,\n            stroke.features = circassian$language,\n            latitude = circassian$latitude,\n            longitude = circassian$longitude,\n            control = FALSE)\n\n## ---- message= F, fig.width=6.2------------------------------------------\nlibrary(dplyr)\n# create newfeature variable\nnewfeature <- circassian\n# set language feature of the Baksan villages to NA and reduce newfeature from dataframe to vector\nnewfeature %>% \n  mutate(language = replace(language, languoid == \"Baksan\", NA)) %>% \n  select(language) %>% \n  unlist() ->\n  newfeature\n# create a map\nset.seed(7)\nmap.feature(circassian$language,\n            features = circassian$languoid, \n            latitude = circassian$latitude,\n            longitude = circassian$longitude,\n            stroke.features = newfeature,\n            control = FALSE)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(7)\nmap.feature(circassian$language,\n            features = circassian$languoid,\n            stroke.features = circassian$language,\n            latitude = circassian$latitude,\n            longitude = circassian$longitude,\n            control = FALSE,\n            radius = 7, stroke.radius = 13)\n\nset.seed(7)\nmap.feature(circassian$language,\n            features = circassian$languoid,\n            stroke.features = circassian$language,\n            latitude = circassian$latitude,\n            longitude = circassian$longitude,\n            control = FALSE,\n            opacity = 0.7, stroke.opacity = 0.6)\n\n## ---- fig.width=6.2------------------------------------------------------\nset.seed(7)\nmap.feature(circassian$language,\n            features = circassian$languoid,\n            stroke.features = circassian$language,\n            latitude = circassian$latitude,\n            longitude = circassian$longitude,\n            control = FALSE,\n            legend = FALSE, stroke.legend = TRUE)\n\nset.seed(7)\nmap.feature(circassian$language,\n            features = circassian$languoid,\n            stroke.features = circassian$language,\n            latitude = circassian$latitude,\n            longitude = circassian$longitude,\n            control = FALSE,\n            title = \"Circassian dialects\", stroke.title = \"Languages\")\n\n## ---- fig.width=6.2------------------------------------------------------\nlibrary(leaflet) # for correct work ofaddProviderTiles()\ndf <- data.frame(lang = c(\"Adyghe\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"),\n   feature = c(\"polysynthetic\", \"polysynthetic\", \"fusion\", \"fusion\", \"fusion\"),\n   popup = c(\"Adyghe\", \"Adyghe\", \"Slavic\", \"Slavic\", \"Slavic\"))\nset.seed(11)\nmap.feature(df$lang, df$feature, df$popup) %>% \naddProviderTiles(\"Stamen.Toner\")\n\n",
    "created" : 1483164123707.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2732086327",
    "id" : "D8077C67",
    "lastKnownWriteTime" : 1483164836,
    "last_content_update" : 1483164836,
    "path" : "~/_DATA/OneDrive1/_Work/github/lingtypology/lingtypology/vignettes/lingtypology.R",
    "project_path" : "vignettes/lingtypology.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}