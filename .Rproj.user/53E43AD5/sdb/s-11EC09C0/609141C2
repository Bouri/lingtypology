{
    "collab_server" : "",
    "contents" : "#' Get country by languoid\n#'\n#' Takes any vector of languoids and return affiliation.\n#' @param x character vector of the languoids (can be written in lower case)\n#' @param intersection logical. If TRUE, function reterns vector of countries, where all languoids from x argument are spoken.\n#' @author George Moroz <agricolamz@gmail.com>\n#' @examples\n#' country.lang(\"Udi\")\n#' country.lang(c(\"Udi\", \"Laz\"))\n#' country.lang(c(\"Udi\", \"Laz\"), intersection = TRUE)\n#' @export\n\ncountry.lang <- function(x, intersection = FALSE){\n  input <- tolower(x)\n  a <- NA\n  for (i in 1:length(input)) {\n    a <- c(a, glottolog[tolower(glottolog$lang) == input[i],]$country)\n  }\n  ret <- unique(a[complete.cases(a)])\n  if (length(ret) < 1) {\n    warning('There is no such a languoid')\n  } else {\n    if(length(ret) != length(x))warning('one or more countries are missed')\n    if(intersection == T){\n      b <- unlist(strsplit(paste(ret, collapse = \", \"), \", \"))\n      names(table(b)[table(b) > 1])\n    } else{ret}}}\n",
    "created" : 1466171993385.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "470002487",
    "id" : "609141C2",
    "lastKnownWriteTime" : 1466172000,
    "last_content_update" : 1466172000593,
    "path" : "~/_DATA/OneDrive1/_Work/github/lingtypology/R/country.lang.R",
    "project_path" : "R/country.lang.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}