library(R.utils)
library(tidyverse)
library(lingtypology)
map.feature(circassian$language)
map.feature(circassian$longitude,
circassian$longitude,
circassian$latitude)
map.feature(circassian$longitude,
longitude = circassian$longitude,
latitude = circassian$latitude)
map.feature(language = circassian$longitude,
longitude = circassian$longitude,
latitude = circassian$latitude)
map.feature(features =  = circassian$longitude,
longitude = circassian$longitude,
latitude = circassian$latitude)
map.feature(features =  circassian$longitude,
longitude = circassian$longitude,
latitude = circassian$latitude)
combn(c("a", "b", "c", "d"))
combn(c("a", "b", "c", "d"), 4)
expand.grid(c("a", "b", "c", "d"))
expand.grid(c("a", "b", "c", "d"), c("a", "b", "c", "d"))
expand.grid("a", "b", "c", "d")
expand.grid(height = seq(60, 80, 5), weight = seq(100, 300, 50),
sex = c("Male","Female"))
library(combinat)
a <- c("Onset","No-Coda","Max-IO", "Dep")
permn(letters[1:3])
permn(a)
as.data.frame(permn(a))
data.frame(permn(a))
d <- data.frame(permn(a))
View(d)
d <- t(data.frame(permn(a)))
d <- data.frame(t(permn(a)))
d
View(d)
d <- data.frame(permn(a))
View(d)
t(d)
df <- t(d)
View(df)
write.csv("/home/agricolamz/_DATA/OneDrive1/_Work/_Handouts/2016 II MSU Phonetics/cand.csv", row.names = F)
write.csv(df, "/home/agricolamz/_DATA/OneDrive1/_Work/_Handouts/2016 II MSU Phonetics/cand.csv", row.names = F)
write.csv(df, "/home/agricolamz/_DATA/OneDrive1/_Work/_Handouts/2016 II MSU Phonetics/cand.csv", row.names = F, sep = ">>")
write.csv(df, "/home/agricolamz/_DATA/OneDrive1/_Work/_Handouts/2016 II MSU Phonetics/cand.csv", row.names = F)
install.packages("rstanarm")
install.packages("rstanarm")
library(lingtypology)
lang.aff("Dargwa")
library(lingtypology)
map.feature("Dargwa")
map.feature(lang.aff("Dargwa"))
lang.aff("Avar")
DT::datatable(iris)
DT::datatable(iris)
library(DT)
datatable(iris)
library("htmltools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
knitr::opts_chunk$set(echo=FALSE, message=FALSE)
library(DT)
datatable(iris, rownames = FALSE,  filter = 'top')
lexic <- read.csv("lexic.csv")
lexic <- read.csv("lexic.csv")
lexic <- read.csv("lexic.csv", sep = "\t")
View(lexic)
row.names(lexic) <- lexic$перевод
View(lexic)
lexic <- read.csv("lexic.csv", sep = "\t")
row.names(lexic) <- lexic$перевод
table(lexic$перевод)
sort(table(lexic$перевод))
a <- sort(table(lexic$перевод))
head(a)
head(a)
a <- sort(table(lexic$перевод))
a
library(DT)
lexic <- read.csv("lexic.csv", sep = "\t")
rowrow.names(lexic) <- lexic$перевод
row.names(lexic) <- lexic$перевод
head(a)
View(lexic)
row.names(lexic) <- lexic$перевод
lexic <- lexic[,-1]
lexic <- read.csv("lexic.csv", sep = "\t")
lexic <- read.csv("lexic.csv", sep = "\t")
library(DT)
datatable(lexic, rownames = FALSE, filter = 'top', extensions = rownames = FALSE,
lexic <- read.csv("lexic.csv", sep = "\t")
library(DT)
datatable(lexic, rownames = FALSE,  colnames = c("перевод",	"[Loewe 1854]",	"[Люлье 1846]",	"Хаджико",	"Большой Кичмай",	"Псебе",	"Агуй-Шапсуг",	"Псейтук",	"Нешукай",	"Б. Псеушхо",	"Егерухай",	"М. Псеушхо",	"[Водождокова 1960]",	"Batı Lehçesi  [Doğ et all 2014]",	"Doğu Lehçesi [Doğ et all 2014]",	"Уляп",	"Вакожиле",	"Бесленей",	"Кургоковское",	"Ходзь",	"Блечепсин",	"Хумара",	"Инджиджишхо",	"Эрсакон",	"Жако"),
extensions = 'Buttons', options = list(dom = 'Bfrtip', buttons = I('colvis'))
)
lexic <- read.csv("lexic.csv", sep = "\t")
sum(complete.cases(lexic[,-1]))
sum(complete.cases(as.matrix(lexic[,-1])))
sum(is.na(as.matrix(lexic[,-1])))
sum(is.na(as.matrix(lexic[,-1])))
View(lexic)
lexic[lexic[,-1] == ""]
a <- lexic[lexic[,-1] == ""]
lexic[,-1]
a <- lexic[lexic[,-1] == ""]
a <- lexic[lexic[,-1] == "", 1]
a <- lexic[lexic[,-1] == "", -1]
View(a)
lexic <- read.csv("lexic.csv", sep = "\t", na.strings = "")
View(lexic)
sum(complete.cases(lexic[,-1]))
sum(complete.cases(as.matrix(lexic[,-1]))
)
lexic[,-1]
View(lexic)
is.na(lexic[,-1])
a <- is.na(lexic[,-1])
sum(a)
804*25
804*24
804*24 - 8351
library(lingtypology)
aff.lang("Dargwa")
load("/home/agricolamz/Рабочий стол/glottolog.rda")
View(glottolog)
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/github/database of the writing systems")
wsdb <- read.csv("lexic.csv", sep = "\t", na.strings = "")
wsdb <- read.csv("database.csv", sep = "\t", na.strings = "")
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/github/database of the writing systems")
wsdb <- read.csv("database.csv", sep = "\t", na.strings = "")
library(DT)
datatable(wsdb, rownames = FALSE)
knitr::opts_chunk$set(echo=FALSE, message=FALSE)
bibliography <- read.csv("bibliography.csv", sep = "\t", na.strings = "")
library(ggplot2)
library(numDeriv)
library(RColorBrewer)
library(gridExtra)
## Polynom: choose only one or try yourself
f  <- function (z) {z^3-1}        #Blurry 1
#f  <- function (z) {z^4+z-1}     #Blurry 2
#f  <- function (z) {z^5+z^3+z-1} #Blurry 3
z <- outer(seq(-2, 2, by = 0.01),1i*seq(-2, 2, by = 0.01),'+')
for (k in 1:5) z <- z-f(z)/matrix(grad(f, z), nrow=nrow(z))
## Supressing texts, titles, ticks, background and legend.
opt <- theme(legend.position="none",
panel.background = element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text =element_blank())
z <- data.frame(expand.grid(x=seq(ncol(z)), y=seq(nrow(z))), z=as.vector(exp(-Mod(f(z)))))
# Create plots. Choose a palette with display.brewer.all()
p1 <- ggplot(z, aes(x=x, y=y, color=z)) + geom_tile() + scale_colour_gradientn(colours=brewer.pal(8, "Paired")) + opt
p2 <- ggplot(z, aes(x=x, y=y, color=z)) + geom_tile() + scale_colour_gradientn(colours=brewer.pal(7, "Paired")) + opt
p3 <- ggplot(z, aes(x=x, y=y, color=z)) + geom_tile() + scale_colour_gradientn(colours=brewer.pal(6, "Paired")) + opt
p4 <- ggplot(z, aes(x=x, y=y, color=z)) + geom_tile() + scale_colour_gradientn(colours=brewer.pal(5, "Paired")) + opt
# Arrange four plots in a 2x2 grid
grid.arrange(p1, p2, p3, p4, ncol=2)
f  <- function (z) {z^2-1}        #Blurry 1
z <- outer(seq(-2, 2, by = 0.01),1i*seq(-2, 2, by = 0.01),'+')
for (k in 1:5) z <- z-f(z)/matrix(grad(f, z), nrow=nrow(z))
z <- data.frame(expand.grid(x=seq(ncol(z)), y=seq(nrow(z))), z=as.vector(exp(-Mod(f(z)))))
ggplot(z, aes(x=x, y=y, color=z)) +
geom_tile() +
scale_colour_gradientn(colours=brewer.pal(8, "Paired")) +
theme(legend.position="none",
panel.background = element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text =element_blank())
f  <- function (z) {z^3-z^2}        #Blurry 1
z <- outer(seq(-2, 2, by = 0.01),1i*seq(-2, 2, by = 0.01),'+')
for (k in 1:5) z <- z-f(z)/matrix(grad(f, z), nrow=nrow(z))
z <- data.frame(expand.grid(x=seq(ncol(z)), y=seq(nrow(z))), z=as.vector(exp(-Mod(f(z)))))
ggplot(z, aes(x=x, y=y, color=z)) +
geom_tile() +
scale_colour_gradientn(colours=brewer.pal(8, "Paired")) +
theme(legend.position="none",
panel.background = element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text =element_blank())
f  <- function (z) {z^5-z^2}        #Blurry 1
z <- outer(seq(-2, 2, by = 0.01),1i*seq(-2, 2, by = 0.01),'+')
for (k in 1:5) z <- z-f(z)/matrix(grad(f, z), nrow=nrow(z))
z <- data.frame(expand.grid(x=seq(ncol(z)), y=seq(nrow(z))), z=as.vector(exp(-Mod(f(z)))))
ggplot(z, aes(x=x, y=y, color=z)) +
geom_tile() +
scale_colour_gradientn(colours=brewer.pal(8, "Paired")) +
theme(legend.position="none",
panel.background = element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text =element_blank())
f  <- function (z) {z^7+4}      #Blurry 1
z <- outer(seq(-2, 2, by = 0.01),1i*seq(-2, 2, by = 0.01),'+')
for (k in 1:5) z <- z-f(z)/matrix(grad(f, z), nrow=nrow(z))
z <- data.frame(expand.grid(x=seq(ncol(z)), y=seq(nrow(z))), z=as.vector(exp(-Mod(f(z)))))
ggplot(z, aes(x=x, y=y, color=z)) +
geom_tile() +
scale_colour_gradientn(colours=brewer.pal(8, "Paired")) +
theme(legend.position="none",
panel.background = element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text =element_blank())
install.packages(c("ape", "car", "chron", "coda", "coin", "colorspace", "colourpicker", "cubature", "data.table", "ggfortify", "ggrepel", "Hmisc", "hunspell", "loo", "party", "Rcpp", "robustbase", "selectr", "servr", "slam", "StanHeaders", "stringdist", "wec", "zoo"))
install.packages(c("cubature", "ggrepel", "Rcpp"))
data(tea)
res.mca <- MCA(tea,quanti.sup=19,quali.sup=20:36)
library(FactoMineR)
data(tea)
res.mca <- MCA(tea,quanti.sup=19,quali.sup=20:36)
summary(res.mca)
a <- sample(5000000, letters)
a <- sample(5000000, letters, replace = T)
a <- sample(5000000, letters, replace = F)
a <- sample(5000000, letters, replace = T)
a <- sample(letters, 5000000, replace = T)
a <- paste0(a, rev(a))
a <- paste0(a, rev(a))
a <- paste0(a, rev(a))
a <- paste0(rev(a), a)
a <- sample(letters, 5000000, replace = T)
a <- paste0(rev(a), a)
b <- sample(letters, 5000000, replace = T)
a <- paste0(rev(a), b)
a <- paste0(a, rev(b))
grep(c("affa", "dddsaa"), "a")
grep("a", c("affa", "dddsaa"))
grepl("a", c("affa", "dddsaa"))
grep("*a", a)
system.time(grep("*a", a))
system.time(d <- grep("*a", a))
a[d]
system.time(d <- grep("g*a", a))
a[d]
system.time(d <- grep("g.a", a))
a[d]
system.time(d <- grep("g.a", a))
system.time(d <- grep("(g|h)a", a))
a[d]
system.time(d <- grep("(g|h)a", a))
a <- letters
a <- letters[1:8]
a <- letters[1:8]
a
b <- sample(10, c(0, 1), replace = T)
b
b <- sample(c(0, 1), 10, replace = T)
b
head(sales)
library("ggmap", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
head(sales)
library(ggmap)
corvallis <- c(lon = -123.2620, lat = 44.5646)
map_5 <- get_map(corvallis, zoom = 10, scale = 1)
map_5
ggmap(map_5)
detach("package:ggmap", unload=TRUE)
install.packages("ggmap")
library("ggmap", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
corvallis <- c(lon = -123.2620, lat = 44.5646)
map_5 <- get_map(corvallis, zoom = 10, scale = 1)
ggmap(map_5)
library(lingtypology)
map.feature("Archi")
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/github/wcad")
bibliography <- read.csv("bibliography.csv", sep = "\t", na.strings = "")
library(lingtypology)
map.feature(unique(bibliography$language))
map.feature(unique(bibliography$language), control = F)
bibliography <- read.csv("bibliography.csv", sep = "\t", na.strings = "")
map.feature(unique(bibliography$language), control = F)
bibliography <- read.csv("bibliography.csv", sep = "\t", na.strings = "")
View(bibliography)
map.feature(unique(bibliography$language), control = F)
bibliography <- read.csv("bibliography.csv", sep = "\t", na.strings = "")
map.feature(unique(bibliography$language), control = F)
map.feature("Mende (Papua New Guinea)")
bibliography <- read.csv("bibliography.csv", sep = "\t", na.strings = "")
map.feature(unique(bibliography$language), control = F)
map.feature("Skou")
map.feature("Nuclear Skou")
map.feature("Nuclear Skou")
glottolog <- read.csv("glottolog.csv", stringsAsFactors = F)
library(lingtypology)
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/github/lingtypology")
glottolog <- read.csv("glottolog.csv", stringsAsFactors = F)
setwd("/home/agricolamz/_DATA/OneDrive1/_Work/github/lingtypology/lingtypology/data")
save(glottolog, file="glottolog.rda")
